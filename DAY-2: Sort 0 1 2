import java.util.* ;
import java.io.*; 
public class Solution 
{
    //  public static int partition(int arr[],int low,int high)
    // {
    //     int pivot=arr[low],i=low,j=high;
    //     // checking for elements smaller than pivot on left  
    //   while(i<j)
    //   {  while( arr[i]<=pivot && i<=high-1)
    //     {
    //         i++;
    //     }
    //     // checking for elements greater than pivot on right
    //     while(arr[j]>pivot && j>=low+1)
    //     {
    //         j--;
    //     }
        
    //     if(i<j)
    //     {
    //         int temp= arr[i];
    //         arr[i]=arr[j];
    //         arr[j]=temp;
    //     }
    //   }
    //   int temp=arr[low];
    //   arr[low]=arr[j];
    //   arr[j]=temp;
    //   return j;
    // }
    // public static int[] quicksort(int arr[],int low,int high)
    // {
    //     if(low<high)
    //     {
    //     int partition_index=partition(arr,low,high);
    //     quicksort(arr,low,partition_index-1);
    //     quicksort(arr,partition_index+1,high);
    //     }
    //     return arr;
    // }

    public static void sort012(int[] arr)
    {
        int count_0=0,
        count_1=0,
        count_2=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]==0)
            {
                count_0++;
            }
            else if(arr[i]==1)
            {
                count_1++;
            }
            else 
            count_2++;
        }
        int i=0,k=0;
        while(i<count_0)
        {
            arr[i]=0;
            i++;
        }
        while(k<count_1)
        {
            arr[i]=1;
            i++;
            k++;
        }
        k=0;
        while(k<count_2)
        {
            arr[i]=2;
            i++;
            k++;
        }
       // quicksort(arr, 0, arr.length-1);
    }
}
